spring:
  application:
    name: openai-integration-framework
  profiles:
    active: dev
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/openai_framework}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true
  data:
    redis:
      host: ${SPRING_REDIS_HOST:localhost}
      port: ${SPRING_REDIS_PORT:6379}
      password: ${SPRING_REDIS_PASSWORD:}
  cloud:
    vault:
      enabled: ${VAULT_ENABLED:false}
      uri: ${VAULT_URI:http://localhost:8200}
      token: ${VAULT_TOKEN:}
      kv:
        enabled: true
        backend: secret
        default-context: application

openai:
  api:
    url: ${OPENAI_API_URL:https://api.openai.com/v1}
    key: ${OPENAI_API_KEY:}
    model: ${OPENAI_API_MODEL:gpt-4}
    timeout: ${OPENAI_API_TIMEOUT:30000}
  context:
    file-path: ${OPENAI_CONTEXT_FILE_PATH:classpath:context/default-context.yaml}

server:
  port: 8080

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

logging:
  level:
    root: INFO
    com.example: DEBUG
    org.springframework.web: INFO
    org.springframework.data: INFO
